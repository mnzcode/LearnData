const e=JSON.parse('{"key":"v-416e54d5","path":"/Java/%E7%AE%97%E6%B3%95.html","title":"算法","lang":"zh-CN","frontmatter":{"description":"算法 递归 概述 算法：解题方案的准确而完整的描述，是一系列解决问题的清晰指令，代表着用系统的方法解决问题的策略机制 递归：程序调用自身的编程技巧 递归： 直接递归：自己的方法调用自己 间接递归：自己的方法调用别的方法，别的方法又调用自己 递归如果控制的不恰当，会形成递归的死循环，从而导致栈内存溢出错误 参考书籍：https://book.douban.com/subject/35263893/","head":[["meta",{"property":"og:url","content":"https://newzone.top/Java/%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"挨踢牛马"}],["meta",{"property":"og:title","content":"算法"}],["meta",{"property":"og:description","content":"算法 递归 概述 算法：解题方案的准确而完整的描述，是一系列解决问题的清晰指令，代表着用系统的方法解决问题的策略机制 递归：程序调用自身的编程技巧 递归： 直接递归：自己的方法调用自己 间接递归：自己的方法调用别的方法，别的方法又调用自己 递归如果控制的不恰当，会形成递归的死循环，从而导致栈内存溢出错误 参考书籍：https://book.douban.com/subject/35263893/"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-16T07:46:55.000Z"}],["meta",{"property":"article:author","content":"挨踢牛马"}],["meta",{"property":"article:modified_time","content":"2023-08-16T07:46:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-16T07:46:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"挨踢牛马\\",\\"url\\":\\"https://newzone.top\\"}]}"]]},"headers":[{"level":2,"title":"递归","slug":"递归","link":"#递归","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"算法","slug":"算法-1","link":"#算法-1","children":[]},{"level":3,"title":"应用","slug":"应用","link":"#应用","children":[]}]},{"level":2,"title":"排序","slug":"排序","link":"#排序","children":[{"level":3,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":3,"title":"选择排序","slug":"选择排序","link":"#选择排序","children":[]},{"level":3,"title":"插入排序","slug":"插入排序","link":"#插入排序","children":[]},{"level":3,"title":"归并排序","slug":"归并排序","link":"#归并排序","children":[]},{"level":3,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":3,"title":"基数排序","slug":"基数排序","link":"#基数排序","children":[]},{"level":3,"title":"算法总结","slug":"算法总结","link":"#算法总结","children":[]}]},{"level":2,"title":"查找","slug":"查找","link":"#查找","children":[]},{"level":2,"title":"匹配","slug":"匹配","link":"#匹配","children":[{"level":3,"title":"BF","slug":"bf","link":"#bf","children":[]},{"level":3,"title":"RK","slug":"rk","link":"#rk","children":[]},{"level":3,"title":"KMP","slug":"kmp","link":"#kmp","children":[]}]},{"level":2,"title":"树","slug":"树","link":"#树","children":[{"level":3,"title":"二叉树","slug":"二叉树","link":"#二叉树","children":[]},{"level":3,"title":"排序树","slug":"排序树","link":"#排序树","children":[]},{"level":3,"title":"平衡树","slug":"平衡树","link":"#平衡树","children":[]},{"level":3,"title":"红黑树","slug":"红黑树","link":"#红黑树","children":[]},{"level":3,"title":"并查集","slug":"并查集","link":"#并查集","children":[]},{"level":3,"title":"字典树","slug":"字典树","link":"#字典树","children":[]}]},{"level":2,"title":"图","slug":"图","link":"#图","children":[]},{"level":2,"title":"位图","slug":"位图","link":"#位图","children":[{"level":3,"title":"基本介绍","slug":"基本介绍-1","link":"#基本介绍-1","children":[]},{"level":3,"title":"工作流程","slug":"工作流程","link":"#工作流程","children":[]},{"level":3,"title":"Guava","slug":"guava","link":"#guava","children":[]},{"level":3,"title":"实现布隆","slug":"实现布隆","link":"#实现布隆","children":[]}]}],"git":{"createdTime":1692172015000,"updatedTime":1692172015000,"contributors":[{"name":"mnz","email":"dhuhua@foxmail.com","commits":1}]},"readingTime":{"minutes":40.86,"words":12257},"filePathRelative":"Java/算法.md","localizedDate":"2023年8月16日","excerpt":"<h1> 算法</h1>\\n<h2> 递归</h2>\\n<h3> 概述</h3>\\n<p>算法：解题方案的准确而完整的描述，是一系列解决问题的清晰指令，代表着用系统的方法解决问题的策略机制</p>\\n<p>递归：程序调用自身的编程技巧</p>\\n<p>递归：</p>\\n<ul>\\n<li>直接递归：自己的方法调用自己</li>\\n<li>间接递归：自己的方法调用别的方法，别的方法又调用自己</li>\\n</ul>\\n<p>递归如果控制的不恰当，会形成递归的死循环，从而导致栈内存溢出错误</p>\\n<p>参考书籍：<a href=\\"https://book.douban.com/subject/35263893/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://book.douban.com/subject/35263893/</a></p>","autoDesc":true}');export{e as data};
