const e=JSON.parse(`{"key":"v-2c25d6ee","path":"/%E6%95%B0%E6%8D%AE%E5%BA%93/Java%E6%95%B0%E6%8D%AE%E5%BA%93API.html","title":"Java数据库API","lang":"zh-CN","frontmatter":{"description":"Java数据库API JDBC 概述 JDBC（Java DataBase Connectivity，Java 数据库连接）是一种用于执行 SQL 语句的 Java API，可以为多种关系型数据库提供统一访问，是由一组用 Java 语言编写的类和接口组成的。 JDBC 是 Java 官方提供的一套规范（接口），用于帮助开发人员快速实现不同关系型数据库的连接 功能类 DriverManager DriverManager：驱动管理对象 注册驱动： 注册给定的驱动：public static void registerDriver(Driver driver) 代码实现语法：Class.forName(\\"com.mysql.jdbc.Driver) com.mysql.jdbc.Driver 中存在静态代码块 static { try { DriverManager.registerDriver(new Driver()); } catch (SQLException var1) { throw new RuntimeException(\\"Can't register driver!\\"); } } 不需要通过 DriverManager 调用静态方法 registerDriver，因为 Driver 类被使用，则自动执行静态代码块完成注册驱动 jar 包中 META-INF 目录下存在一个 java.sql.Driver 配置文件，文件中指定了 com.mysql.jdbc.Driver 获取数据库连接并返回连接对象： 方法：public static Connection getConnection(String url, String user, String password) url：指定连接的路径，语法为 jdbc:mysql://ip地址(域名):端口号/数据库名称 user：用户名 password：密码","head":[["meta",{"property":"og:url","content":"https://newzone.top/learn_data/%E6%95%B0%E6%8D%AE%E5%BA%93/Java%E6%95%B0%E6%8D%AE%E5%BA%93API.html"}],["meta",{"property":"og:site_name","content":"挨踢牛马"}],["meta",{"property":"og:title","content":"Java数据库API"}],["meta",{"property":"og:description","content":"Java数据库API JDBC 概述 JDBC（Java DataBase Connectivity，Java 数据库连接）是一种用于执行 SQL 语句的 Java API，可以为多种关系型数据库提供统一访问，是由一组用 Java 语言编写的类和接口组成的。 JDBC 是 Java 官方提供的一套规范（接口），用于帮助开发人员快速实现不同关系型数据库的连接 功能类 DriverManager DriverManager：驱动管理对象 注册驱动： 注册给定的驱动：public static void registerDriver(Driver driver) 代码实现语法：Class.forName(\\"com.mysql.jdbc.Driver) com.mysql.jdbc.Driver 中存在静态代码块 static { try { DriverManager.registerDriver(new Driver()); } catch (SQLException var1) { throw new RuntimeException(\\"Can't register driver!\\"); } } 不需要通过 DriverManager 调用静态方法 registerDriver，因为 Driver 类被使用，则自动执行静态代码块完成注册驱动 jar 包中 META-INF 目录下存在一个 java.sql.Driver 配置文件，文件中指定了 com.mysql.jdbc.Driver 获取数据库连接并返回连接对象： 方法：public static Connection getConnection(String url, String user, String password) url：指定连接的路径，语法为 jdbc:mysql://ip地址(域名):端口号/数据库名称 user：用户名 password：密码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-16T07:46:55.000Z"}],["meta",{"property":"article:author","content":"挨踢牛马"}],["meta",{"property":"article:modified_time","content":"2023-08-16T07:46:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java数据库API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-16T07:46:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"挨踢牛马\\",\\"url\\":\\"https://newzone.top\\"}]}"]]},"headers":[{"level":2,"title":"JDBC","slug":"jdbc","link":"#jdbc","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"功能类","slug":"功能类","link":"#功能类","children":[]},{"level":3,"title":"注入攻击","slug":"注入攻击","link":"#注入攻击","children":[]},{"level":3,"title":"连接池","slug":"连接池","link":"#连接池","children":[]}]},{"level":2,"title":"Jedis","slug":"jedis","link":"#jedis","children":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"工具类","slug":"工具类","link":"#工具类","children":[]}]}],"git":{"createdTime":1692172015000,"updatedTime":1692172015000,"contributors":[{"name":"mnz","email":"dhuhua@foxmail.com","commits":1}]},"readingTime":{"minutes":7.58,"words":2273},"filePathRelative":"数据库/Java数据库API.md","localizedDate":"2023年8月16日","excerpt":"<h1> Java数据库API</h1>\\n<h2> JDBC</h2>\\n<h3> 概述</h3>\\n<p>JDBC（Java DataBase Connectivity，Java 数据库连接）是一种用于执行 SQL 语句的 Java API，可以为多种关系型数据库提供统一访问，是由一组用 Java 语言编写的类和接口组成的。</p>\\n<p>JDBC 是 Java 官方提供的一套规范（接口），用于帮助开发人员快速实现不同关系型数据库的连接</p>\\n<hr>\\n<h3> 功能类</h3>\\n<h4> DriverManager</h4>\\n<p>DriverManager：驱动管理对象</p>\\n<ul>\\n<li>\\n<p>注册驱动：</p>\\n<ul>\\n<li>\\n<p>注册给定的驱动：<code>public static void registerDriver(Driver driver)</code></p>\\n</li>\\n<li>\\n<p>代码实现语法：<code>Class.forName(\\"com.mysql.jdbc.Driver)</code></p>\\n</li>\\n<li>\\n<p>com.mysql.jdbc.Driver 中存在静态代码块</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">static</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">DriverManager</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">registerDriver</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Driver</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">SQLException</span> var1<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">RuntimeException</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Can't register driver!\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>不需要通过 DriverManager 调用静态方法 registerDriver，因为 Driver 类被使用，则自动执行静态代码块完成注册驱动</p>\\n</li>\\n<li>\\n<p>jar 包中 META-INF 目录下存在一个 java.sql.Driver 配置文件，文件中指定了 com.mysql.jdbc.Driver</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>获取数据库连接并返回连接对象：</p>\\n<p>方法：<code>public static Connection getConnection(String url, String user, String password)</code></p>\\n<ul>\\n<li>url：指定连接的路径，语法为 <code>jdbc:mysql://ip地址(域名):端口号/数据库名称</code></li>\\n<li>user：用户名</li>\\n<li>password：密码</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
