const e=JSON.parse('{"key":"v-396a8dce","path":"/%E4%B8%AD%E9%97%B4%E4%BB%B6/Zookeeper.html","title":"Zookeeper","lang":"zh-CN","frontmatter":{"description":"Zookeeper 基本介绍 框架特征 Zookeeper 是 Apache Hadoop 项目子项目，为分布式框架提供协调服务，是一个树形目录服务 Zookeeper 是基于观察者模式设计的分布式服务管理框架，负责存储和管理共享数据，接受观察者的注册监控，一旦这些数据的状态发生变化，Zookeeper 会通知观察者 Zookeeper 是一个领导者（Leader），多个跟随者（Follower）组成的集群 集群中只要有半数以上节点存活就能正常服务，所以 Zookeeper 适合部署奇数台服务器 全局数据一致，每个 Server 保存一份相同的数据副本，Client 无论连接到哪个 Server，数据都是一致 更新的请求顺序执行，来自同一个 Client 的请求按其发送顺序依次执行 数据更新原子性，一次数据更新要么成功，要么失败 实时性，在一定的时间范围内，Client 能读到最新数据 心跳检测，会定时向各个服务提供者发送一个请求（实际上建立的是一个 Socket 长连接）","head":[["meta",{"property":"og:url","content":"https://newzone.top/%E4%B8%AD%E9%97%B4%E4%BB%B6/Zookeeper.html"}],["meta",{"property":"og:site_name","content":"挨踢牛马"}],["meta",{"property":"og:title","content":"Zookeeper"}],["meta",{"property":"og:description","content":"Zookeeper 基本介绍 框架特征 Zookeeper 是 Apache Hadoop 项目子项目，为分布式框架提供协调服务，是一个树形目录服务 Zookeeper 是基于观察者模式设计的分布式服务管理框架，负责存储和管理共享数据，接受观察者的注册监控，一旦这些数据的状态发生变化，Zookeeper 会通知观察者 Zookeeper 是一个领导者（Leader），多个跟随者（Follower）组成的集群 集群中只要有半数以上节点存活就能正常服务，所以 Zookeeper 适合部署奇数台服务器 全局数据一致，每个 Server 保存一份相同的数据副本，Client 无论连接到哪个 Server，数据都是一致 更新的请求顺序执行，来自同一个 Client 的请求按其发送顺序依次执行 数据更新原子性，一次数据更新要么成功，要么失败 实时性，在一定的时间范围内，Client 能读到最新数据 心跳检测，会定时向各个服务提供者发送一个请求（实际上建立的是一个 Socket 长连接）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-16T07:46:55.000Z"}],["meta",{"property":"article:author","content":"挨踢牛马"}],["meta",{"property":"article:modified_time","content":"2023-08-16T07:46:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Zookeeper\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-16T07:46:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"挨踢牛马\\",\\"url\\":\\"https://newzone.top\\"}]}"]]},"headers":[{"level":2,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[{"level":3,"title":"框架特征","slug":"框架特征","link":"#框架特征","children":[]},{"level":3,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]}]},{"level":2,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[{"level":3,"title":"安装搭建","slug":"安装搭建","link":"#安装搭建","children":[]},{"level":3,"title":"操作命令","slug":"操作命令","link":"#操作命令","children":[]},{"level":3,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":3,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}]},{"level":2,"title":"集群介绍","slug":"集群介绍","link":"#集群介绍","children":[{"level":3,"title":"相关概念","slug":"相关概念","link":"#相关概念","children":[]},{"level":3,"title":"初次选举","slug":"初次选举","link":"#初次选举","children":[]},{"level":3,"title":"再次选举","slug":"再次选举","link":"#再次选举","children":[]},{"level":3,"title":"数据写入","slug":"数据写入","link":"#数据写入","children":[]}]},{"level":2,"title":"底层协议","slug":"底层协议","link":"#底层协议","children":[{"level":3,"title":"Paxos","slug":"paxos","link":"#paxos","children":[]},{"level":3,"title":"ZAB","slug":"zab","link":"#zab","children":[]},{"level":3,"title":"CAP","slug":"cap","link":"#cap","children":[]}]},{"level":2,"title":"监听机制","slug":"监听机制","link":"#监听机制","children":[{"level":3,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[]},{"level":3,"title":"监听案例","slug":"监听案例","link":"#监听案例","children":[]}]},{"level":2,"title":"分布式锁","slug":"分布式锁","link":"#分布式锁","children":[{"level":3,"title":"实现原理","slug":"实现原理-1","link":"#实现原理-1","children":[]},{"level":3,"title":"Curator","slug":"curator","link":"#curator","children":[]}]},{"level":2,"title":"源码解析","slug":"源码解析","link":"#源码解析","children":[{"level":3,"title":"服务端","slug":"服务端-1","link":"#服务端-1","children":[]},{"level":3,"title":"选举机制","slug":"选举机制","link":"#选举机制","children":[]},{"level":3,"title":"客户端","slug":"客户端-1","link":"#客户端-1","children":[]}]}],"git":{"createdTime":1692172015000,"updatedTime":1692172015000,"contributors":[{"name":"mnz","email":"dhuhua@foxmail.com","commits":1}]},"readingTime":{"minutes":24.04,"words":7213},"filePathRelative":"中间件/Zookeeper.md","localizedDate":"2023年8月16日","excerpt":"<h1> Zookeeper</h1>\\n<h2> 基本介绍</h2>\\n<h3> 框架特征</h3>\\n<p>Zookeeper 是 Apache Hadoop 项目子项目，为分布式框架提供协调服务，是一个树形目录服务</p>\\n<p>Zookeeper 是基于观察者模式设计的分布式服务管理框架，负责存储和管理共享数据，接受观察者的注册监控，一旦这些数据的状态发生变化，Zookeeper 会通知观察者</p>\\n<ul>\\n<li>Zookeeper 是一个领导者（Leader），多个跟随者（Follower）组成的集群</li>\\n<li>集群中只要有半数以上节点存活就能正常服务，所以 Zookeeper 适合部署奇数台服务器</li>\\n<li><strong>全局数据一致</strong>，每个 Server 保存一份相同的数据副本，Client 无论连接到哪个 Server，数据都是一致</li>\\n<li>更新的请求顺序执行，来自同一个 Client 的请求按其发送顺序依次执行</li>\\n<li><strong>数据更新原子性</strong>，一次数据更新要么成功，要么失败</li>\\n<li>实时性，在一定的时间范围内，Client 能读到最新数据</li>\\n<li>心跳检测，会定时向各个服务提供者发送一个请求（实际上建立的是一个 Socket 长连接）</li>\\n</ul>","autoDesc":true}');export{e as data};
