import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as r,a as n,d as e,b as a,e as i}from"./app-3aac6385.js";const c={},p=n("h1",{id:"nginx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nginx","aria-hidden":"true"},"#"),e(" Nginx")],-1),u=n("h2",{id:"安装软件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装软件","aria-hidden":"true"},"#"),e(" 安装软件")],-1),d={href:"https://baike.baidu.com/item/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/7793488",target:"_blank",rel:"noopener noreferrer"},g=i('<p>Nginx 两个最核心的功能：高性能的静态 Web 服务器，反向代理</p><ul><li><p>安装指令：sudo apt-get install nginx</p></li><li><p>查看版本：nginx -v</p></li><li><p>系统指令：systemctl / service start/restart/stop/status nginx</p></li></ul><p>配置文件安装目录：/etc/nginx</p><p>日志文件：/var/log/nginx</p><hr><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><p>nginx.conf 文件时 Nginx 的主配置文件</p><img src="https://seazean.oss-cn-beijing.aliyuncs.com/img/Web/Nginx配置文件conf.jpg" style="zoom:80%;"><ul><li><p>main 部分<br><img src="https://seazean.oss-cn-beijing.aliyuncs.com/img/Web/Nginx配置文件main部分.jpg" style="zoom:67%;"></p></li><li><p>events 部分<br><img src="https://seazean.oss-cn-beijing.aliyuncs.com/img/Web/Nginx配置文件events部分.jpg" style="zoom:67%;"></p></li><li><p>server 部分<br><img src="https://seazean.oss-cn-beijing.aliyuncs.com/img/Web/Nginx配置文件server部分.jpg" style="zoom:67%;"></p><p>root 设置的路径会拼接上 location 的路径，然后去最终路径寻找对应的文件</p></li></ul><hr><h2 id="发布项目" tabindex="-1"><a class="header-anchor" href="#发布项目" aria-hidden="true">#</a> 发布项目</h2>',11),h=i(`<li><p>创建一个 toutiao 目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home
<span class="token function">mkdir</span> toutiao
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将项目上传到 toutiao 目录</p></li><li><p>解压项目 unzip web.zip</p></li><li><p>编辑 Nginx 配置文件 nginx.conf</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>server <span class="token punctuation">{</span>
	listen       <span class="token number">80</span><span class="token punctuation">;</span>
	server_name  localhost<span class="token punctuation">;</span>
	location / <span class="token punctuation">{</span>
		root   /home/seazean/toutiao<span class="token punctuation">;</span>
		index  index.html index.htm<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重启 Nginx 服务：systemctl restart nginx</p></li>`,5),m={href:"http://127.0.0.1:80",target:"_blank",rel:"noopener noreferrer"},b=i('<hr><h2 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理" aria-hidden="true">#</a> 反向代理</h2><blockquote><p>无法访问 Google，可以配置一个代理服务器，发送请求到代理服务器，代理服务器经过转发，再将请求转发给 Google，返回结果之后，再次转发给用户，这个叫做正向代理，正向代理对于用户来说，是有感知的</p></blockquote><p><strong>正向代理（forward proxy）</strong>：是一个位于客户端和目标服务器之间的代理服务器，为了从目标服务器取得内容，客户端向代理服务器发送一个请求并指定目标，然后代理服务器向目标服务器转交请求并将获得的内容返回给客户端，<strong>正向代理，其实是&quot;代理服务器&quot;代理了当前&quot;客户端&quot;，去和&quot;目标服务器&quot;进行交互</strong></p><p>作用：</p><ul><li>突破访问限制：通过代理服务器，可以突破自身 IP 访问限制，访问国外网站，教育网等</li><li>提高访问速度：代理服务器都设置一个较大的硬盘缓冲区，会将部分请求的响应保存到缓冲区中，当其他用户再访问相同的信息时， 则直接由缓冲区中取出信息，传给用户，以提高访问速度</li><li>隐藏客户端真实 IP：隐藏自己的 IP，免受攻击</li></ul><img src="https://seazean.oss-cn-beijing.aliyuncs.com/img/Web/正向代理.png" style="zoom:50%;"><p><strong>反向代理（reverse proxy）</strong>：是指以代理服务器来接受 Internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 Internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器，<strong>反向代理，其实是&quot;代理服务器&quot;代理了&quot;目标服务器&quot;，去和当前&quot;客户端&quot;进行交互</strong></p><p>作用：</p><ul><li>隐藏服务器真实 IP：使用反向代理，可以对客户端隐藏服务器的 IP 地址</li><li>负载均衡：根据所有真实服务器的负载情况，将客户端请求分发到不同的真实服务器上</li><li>提高访问速度：反向代理服务器可以对于静态内容及短时间内有大量访问请求的动态内容提供缓存服务</li><li>提供安全保障：反向代理服务器可以作为应用层防火墙，为网站提供对基于 Web 的攻击行为（例如 DoS/DDoS）的防护，更容易排查恶意软件等</li></ul><img src="https://seazean.oss-cn-beijing.aliyuncs.com/img/Web/反向代理.png" style="zoom:50%;"><p>区别：</p><ul><li><p>正向代理其实是客户端的代理，帮助客户端访问其无法访问的服务器资源；反向代理则是服务器的代理，帮助服务器做负载均衡，安全防护等</p></li><li><p>正向代理一般是客户端架设的，比如在自己的机器上安装一个代理软件；反向代理一般是服务器架设的，比如在自己的机器集群中部署一个反向代理服务器</p></li><li><p>正向代理中，服务器不知道真正的客户端到底是谁，以为访问自己的就是真实的客户端；反向代理中，客户端不知道真正的服务器是谁，以为自己访问的就是真实的服务器</p></li><li><p>正向代理和反向代理的作用和目的不同。正向代理主要是用来解决访问限制问题；而反向代理则是提供负载均衡、安全防护等作用；二者均能提高访问速度</p></li></ul>',13);function v(x,_){const s=o("ExternalLinkIcon");return l(),r("div",null,[p,u,n("p",null,[e("Nginx 是一个高性能的 HTTP 和"),n("a",d,[e("反向代理 "),a(s)]),e("Web 服务器，同时也提供了 IMAP/POP3/SMTP 服务")]),g,n("ol",null,[h,n("li",null,[n("p",null,[e("浏览器打开网址："),n("a",m,[e("http://127.0.0.1:80"),a(s)])])])]),b])}const y=t(c,[["render",v],["__file","Nginx.html.vue"]]);export{y as default};
